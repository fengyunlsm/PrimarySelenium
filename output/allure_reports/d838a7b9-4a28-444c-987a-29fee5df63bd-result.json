{"name": "test_login", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message:", "trace": "self = <PrimarySelenium.case.login.test_login_case.TestLoginCase object at 0x03C55508>, init_login = <page.login_page.LoginPage object at 0x03C55160>\n\n    @pytest.mark.login\n    @pytest.mark.usefixtures(\"init_driver\")\n    def test_login(self, init_login):\n        init_login.click_forget_pwd_link()\n>       assert init_login.check_to_forget_pwd() == True\n\ncase\\login\\test_login_case.py:37: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\npage\\login_page.py:33: in check_to_forget_pwd\n    return self.fd.get_element(\"forget_password_check\", \"忘记密码页_校验跳转成功\") is not None\nbase\\basepage.py:188: in get_element\n    self.wait_eleVisible(info, img_doc)\nbase\\basepage.py:92: in wait_eleVisible\n    WebDriverWait(self.driver, timeout, frequency).until(EC.visibility_of_element_located(loc))\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"858c64e28323c176f6a4c1f6ca458e52\")>, method = <selenium.webdriver.support.expected_conditions.visibility_of_element_located object at 0x03C55AD8>\nmessage = ''\n\n    def until(self, method, message=''):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value is not False.\"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.time() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, 'screen', None)\n                stacktrace = getattr(exc, 'stacktrace', None)\n            time.sleep(self._poll)\n            if time.time() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\nD:\\python\\lib\\site-packages\\selenium\\webdriver\\support\\wait.py:80: TimeoutException"}, "attachments": [{"name": "log", "source": "2eac51fa-d134-4d17-92f4-9e23f7a4a617-attachment.txt", "type": "text/plain"}], "start": 1597294331614, "stop": 1597294362882, "uuid": "5340918b-545b-4a79-930c-b489736ea765", "historyId": "5962709e675f4f4e1376f8ee83b33490", "testCaseId": "5f4a0dfd943dd3927afc6230a6eae707", "fullName": "case.login.test_login_case.TestLoginCase#test_login", "labels": [{"name": "tag", "value": "@pytest.mark.usefixtures('init_driver')"}, {"name": "tag", "value": "login"}, {"name": "parentSuite", "value": "case.login"}, {"name": "suite", "value": "test_login_case"}, {"name": "subSuite", "value": "TestLoginCase"}, {"name": "host", "value": "FYYX-2019VXOSDQ"}, {"name": "thread", "value": "14600-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "case.login.test_login_case"}]}