{"name": "test_login_password_error_case", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message:", "trace": "self = <PrimarySelenium.case.login.test_login_case.TestLoginCase object at 0x03BC69A0>, init_login = <bussiness.login_bussiness.LoginBussiness object at 0x03BCB0A0>\n\n    @pytest.mark.login\n    @pytest.mark.usefixtures(\"init_driver\")\n    def test_login_password_error_case(self, init_login):\n    \n        init_login.login_eshop(\"13544989573\", \"111111\")\n>       assert init_login.check_login_fail() == True\n\ncase\\login\\test_login_case.py:24: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nbussiness\\login_bussiness.py:22: in check_login_fail\n    if self.login.get_login_fail_tips() == \"用户名或密码错误\":\npage\\login_page.py:28: in get_login_fail_tips\n    self.fd.wait_eleVisible(\"login_error_tip_parent\", \"登录失败_等待错误提示出现\")\nbase\\basepage.py:93: in wait_eleVisible\n    WebDriverWait(self.driver, timeout, frequency).until(EC.visibility_of_element_located(loc))\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"90296fc3680501925c4183288f8ad334\")>, method = <selenium.webdriver.support.expected_conditions.visibility_of_element_located object at 0x03BCB748>, message = ''\n\n    def until(self, method, message=''):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value is not False.\"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.time() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, 'screen', None)\n                stacktrace = getattr(exc, 'stacktrace', None)\n            time.sleep(self._poll)\n            if time.time() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\nD:\\python\\lib\\site-packages\\selenium\\webdriver\\support\\wait.py:80: TimeoutException"}, "attachments": [{"name": "log", "source": "da68101f-a08a-4bfc-818a-7e3306d646f7-attachment.txt", "type": "text/plain"}], "start": 1605745828994, "stop": 1605745861082, "uuid": "ed4c5b81-6dc1-49e9-aa63-b29a955fe0bc", "historyId": "8c75e61dfeaf40e00fbf3596d8f857c6", "testCaseId": "e31b71ea53c9108f5a105705e791d0a6", "fullName": "case.login.test_login_case.TestLoginCase#test_login_password_error_case", "labels": [{"name": "tag", "value": "@pytest.mark.usefixtures('init_driver')"}, {"name": "tag", "value": "login"}, {"name": "parentSuite", "value": "case.login"}, {"name": "suite", "value": "test_login_case"}, {"name": "subSuite", "value": "TestLoginCase"}, {"name": "host", "value": "FYYX-2019VXOSDQ"}, {"name": "thread", "value": "14712-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "case.login.test_login_case"}]}