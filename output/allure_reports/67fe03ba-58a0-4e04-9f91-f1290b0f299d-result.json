{"name": "test_pruchase_whith_cart", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message:", "trace": "self = <allure_commons._allure.fixture object at 0x038B9EB0>, args = (), kwargs = {}\n\n    def __call__(self, *args, **kwargs):\n        self.parameters = func_parameters(self._fixture_function, *args, **kwargs)\n    \n        with self:\n>           return self._fixture_function(*args, **kwargs)\n\nD:\\python\\lib\\site-packages\\allure_commons\\_allure.py:185: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\ncase\\order\\conftest.py:26: in init_order\n    cart.empty_cart()\npage\\shoppingcart_page.py:14: in empty_cart\n    self.fd.click_element(\"shoppingcart\", \"empty_cart_button\", \"购物车页面_清空购物车\")\nbase\\basepage.py:350: in click_element\n    element = self.get_element(node, info, img_doc)\nbase\\basepage.py:190: in get_element\n    self.wait_eleVisible(node, info, img_doc)\nbase\\basepage.py:94: in wait_eleVisible\n    WebDriverWait(self.driver, timeout, frequency).until(EC.visibility_of_element_located(loc))\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"4bcd9f092ee657c27e79b49149c20181\")>, method = <selenium.webdriver.support.expected_conditions.visibility_of_element_located object at 0x038E0940>, message = ''\n\n    def until(self, method, message=''):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value is not False.\"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.time() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, 'screen', None)\n                stacktrace = getattr(exc, 'stacktrace', None)\n            time.sleep(self._poll)\n            if time.time() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\nD:\\python\\lib\\site-packages\\selenium\\webdriver\\support\\wait.py:80: TimeoutException"}, "attachments": [{"name": "log", "source": "1ea7c1e4-3757-4f34-8592-67da577d526b-attachment.txt", "type": "text/plain"}], "start": 1605801075656, "stop": 1605801082436, "uuid": "8fd6e0a0-86ba-45f4-8075-d289ce3e2173", "historyId": "667eb1029f37faae4bd33d91fb421009", "testCaseId": "0ea7521afb36bac59cfdd982f8d7c4ad", "fullName": "case.order.test_order.TestShoppingCartCase#test_pruchase_whith_cart", "labels": [{"name": "tag", "value": "order"}, {"name": "tag", "value": "@pytest.mark.usefixtures('init_order')"}, {"name": "parentSuite", "value": "case.order"}, {"name": "suite", "value": "test_order"}, {"name": "subSuite", "value": "TestShoppingCartCase"}, {"name": "host", "value": "FYYX-2019VXOSDQ"}, {"name": "thread", "value": "3540-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "case.order.test_order"}]}