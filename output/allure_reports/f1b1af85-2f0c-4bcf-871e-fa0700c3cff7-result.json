{"name": "test_cart_empty", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message:", "trace": "self = <allure_commons._allure.fixture object at 0x03B584D8>, args = (), kwargs = {}\n\n    def __call__(self, *args, **kwargs):\n        self.parameters = func_parameters(self._fixture_function, *args, **kwargs)\n    \n        with self:\n>           return self._fixture_function(*args, **kwargs)\n\nD:\\python\\lib\\site-packages\\allure_commons\\_allure.py:185: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\ncase\\shoppingcart\\conftest.py:27: in init_cart\n    cart.empty_cart()\npage\\shoppingcart_page.py:14: in empty_cart\n    self.fd.click_element(\"shoppingcart\", \"empty_cart_button\", \"购物车页面_清空购物车\")\nbase\\basepage.py:350: in click_element\n    element = self.get_element(node, info, img_doc)\nbase\\basepage.py:190: in get_element\n    self.wait_eleVisible(node, info, img_doc)\nbase\\basepage.py:94: in wait_eleVisible\n    WebDriverWait(self.driver, timeout, frequency).until(EC.visibility_of_element_located(loc))\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"db953e6a1a8429720dc267f26f25e5a3\")>, method = <selenium.webdriver.support.expected_conditions.visibility_of_element_located object at 0x03B58DA8>, message = ''\n\n    def until(self, method, message=''):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value is not False.\"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.time() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, 'screen', None)\n                stacktrace = getattr(exc, 'stacktrace', None)\n            time.sleep(self._poll)\n            if time.time() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\nD:\\python\\lib\\site-packages\\selenium\\webdriver\\support\\wait.py:80: TimeoutException"}, "attachments": [{"name": "log", "source": "e68d75b4-49d3-4d1d-b789-958487f6b27c-attachment.txt", "type": "text/plain"}], "start": 1605845420504, "stop": 1605845424058, "uuid": "4db2dcca-8318-4429-a447-f39995decde9", "historyId": "145a9f08a24ce447506321b9c84fc7d6", "testCaseId": "284661307af7954539b2017f3ffd157b", "fullName": "case.shoppingcart.test_shopping_cart.TestShoppingCartCase#test_cart_empty", "labels": [{"name": "tag", "value": "@pytest.mark.usefixtures('init_cart')"}, {"name": "tag", "value": "cart"}, {"name": "parentSuite", "value": "case.shoppingcart"}, {"name": "suite", "value": "test_shopping_cart"}, {"name": "subSuite", "value": "TestShoppingCartCase"}, {"name": "host", "value": "FYYX-2019VXOSDQ"}, {"name": "thread", "value": "13136-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "case.shoppingcart.test_shopping_cart"}]}